
-- Examples for unification with pruning
--------------------------------------------------------------------------------

-- we use Eq to test unification

let Eq : {A : U} → A → A → U
    = λ {A} x y. (P : A → U) → P x → P y;
let refl : {A : U}{x : A} → Eq {A} x x
    = λ _ px. px;

-- inline type annotation
let the : (A : U) → A → A = λ _ x. x;


-- 1. Solvable non-linear spine: (m a a =? λ x y. y) is solvable, because m's type does not
--    depend on the non-linear arguments, and the rhs also does not depend on them.
let m : (A : U)(B : U) → U → U → U = _;
let test = λ a b. the (Eq (m a a) (λ x y. y)) refl;

-- 2. Unsolvable non-linear spine: m's type depends on non-linear args.
-- let m : (A : U)(B : U) → A → B → B = _;
-- let test = λ a b. the (Eq (m a a) (λ x y. y)) refl;

-- 3. Intersection solution: first & second args pruned from m.
let m : U → U → U → U = _;
let test = λ a b c. the (Eq (m a b a) (m c b c)) refl;


-- 4. Examples requiring pruning
let pr1 = λ f x. f x;
let pr2 = λ f x y. f x y;
let pr3 = λ f. f U;

U
